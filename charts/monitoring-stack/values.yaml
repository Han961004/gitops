# 공통 네임스페이스
namespace: monitoring

# 1) nginx-ingress 설정
ingress-nginx:
  controller:
    service:
      type: LoadBalancer
    metrics:
      enabled: true

# 2) Prometheus 설정
prometheus:
  alertmanager:
    ingress:
      enabled: true
      hosts:
        - host: prometheus.example.com
          paths:
            - path: /
              pathType: ImplementationSpecific

  server:
    ingress:
      enabled: true
      hosts:
        - host: prometheus.example.com
          paths:
            - path: /
              pathType: ImplementationSpecific


# 3) Grafana 설정
grafana:
  admin:
    existingSecret: grafana-admin-credentials
  ingress:
    enabled: true
    hosts:
      - grafana.example.com
  sidecar:
    dashboards:
      enabled: true
    datasources:
      enabled: true
      defaultDatasourceEnabled: true

# 4) Loki 설정
loki:
  # 1) commonConfig 비워서 기본 오브젝트스토리지 로직 스킵
  commonConfig: {}

  # 2) enterprise 기능 비활성화
  enterprise:
    enabled: false
    config: {}

  # 3) Helm 헬퍼가 기대하는 bucketNames 채워주기 (dummy 값이라도 됨)
  storage:
    bucketNames:
      chunks: loki-chunks
      indexes: loki-indexes

  # 4) config 아래에 로컬 filesystem 스토리지 설정
  config:
    auth_enabled: false
    server:
      http_listen_port: 3100

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 168h

    ruler:
      storage:
        type: local
        local:
          directory: /data/loki/rules

    storage_config:
      boltdb_shipper:
        shared_store: filesystem
        active_index_directory: /data/loki/index
      filesystem:
        directory: /data/loki/chunks
